---
import { Markdown } from '@astropub/md'
import Layout from '../layouts/Layout.astro';
import { navigation, discourseHost } from "../navigation";


export async function getStaticPaths() {
  let subsection1 = navigation.map(item => "subsection" in item? item.subsection : []).flat();
  let subsection2 = subsection1.map(item => "subsection" in item? item.subsection : []).flat();
  let subsection3 = subsection2.map(item => "subsection" in item? item.subsection : []).flat();
  let flattenNav = [...subsection3, ...subsection2, ...subsection1, ...navigation];
  return flattenNav.map(  ({ slug, title, discourseUrl }) => {
    return {
      params: { slug },
      props: { title, discourseUrl, slug },
    };
  });
}

const { title, discourseUrl, slug } = Astro.props;
const postData = await fetch(`${discourseHost}${discourseUrl}.json?include_raw=true`);
const postJsonData = await postData.json();
const contentHtmlData = postJsonData.post_stream.posts[0].coocked;
const postTitle = postJsonData.title;
const lastUpdatedAt = postJsonData.post_stream.posts[0].updated_at;
---
<Layout title={postTitle} currentPath={slug}>
    <div set:html={contentHtmlData} />
    <div class="p-notification--information is-inline">
      <div class="p-notification__content">
        <p class="p-notification__message">This page was updated at <span class="timedisplay" style="text-decoration: underline">{lastUpdatedAt}</span>. <a href={`${discourseHost}${discourseUrl}`}>Improve this document on Discourse.</a></p>
      </div>
    </div>
</Layout>
<script is:inline>
  window.addEventListener('load', ()=>{
  let elements = document.getElementsByClassName("timedisplay");
  for (let element of elements) {
      let display = element.getAttribute("display");
      let timeSource = element.innerHTML;
      let date = new Date(timeSource);
      if (date instanceof Date && !isNaN(date)){
        switch(display){
          case "date":
            element.innerHTML = date.toLocaleDateString();
            break;
          case "time":
            element.innerHTML = date.toLocaleTimeString();
            break;
          default:
            element.innerHTML = date.toLocaleString();
            break;
        }
      }
  }
}) 
</script>